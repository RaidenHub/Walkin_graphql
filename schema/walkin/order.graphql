type Items {
  price: Int
  quantity: Int
  userId: String
  customeName: String
  shopId: String
  productId: String
  toppings: [Toppings]
  dips: [Dips]
  extras: [Extras]
  sauces: [Sauces]
}

type Order {
  items: [Items]
  total: Int
  discount: Int
  paymentMethod: String
  paymentId: String
  userId: String
  shopId: String
  status: String
}
# itemsInput
input ItemsInput {
  price: Int
  quantity: Int
  userId: String
  customeName: String
  shopId: String
  productId: String
  toppings: [ToppingsInput]
  dips: [DipsInput]
  extras: [ExtrasInput]
  sauces: [SaucesInput]
}
type Query {
  getOrder(token: String): [Order]
    @rest(
      endpoint: "https://walk--in.herokuapp.com/order/"
      method: GET
      headers: [{ name: "Authorization", value: "Bearer $token" }]
    )
  getOrderById(id: String, token: String): Order
    @rest(
      endpoint: "https://walk--in.herokuapp.com/order/"
      method: GET
      headers: [{ name: "Authorization", value: "Bearer $token" }]
    )
}
type Mutation {
  addToOrder(
    name: String
    price: Int
    quantity: Int
    items: [ItemsInput]
    total: Int
    discount: Int
    paymentMethod: String
    paymentId: String
    userId: String
    customeName: String
    shopId: String
    status: String
    token: String
  ): Order
    @rest(
      endpoint: "https://walk--in.herokuapp.com/order/"
      method: POST
      headers: [{ name: "Authorization", value: "Bearer $token" }]
    )
  updateOrder(
    id: ID
    name: String
    price: Int
    quantity: Int
    userId: String
    foodId: String
    items: ItemsInput
    token: String
  ): Order
    @rest(
      endpoint: "https://walk--in.herokuapp.com/order/$id"
      method: PUT
      headers: [{ name: "Authorization", value: "Bearer $token" }]
    )
  deleteOrder(id: ID, token: String): Order
    @rest(
      endpoint: "https://walk--in.herokuapp.com/order/$id"
      method: DELETE
      headers: [{ name: "Authorization", value: "Bearer $token" }]
    )
}
