type Topping {
  name: String!
  price: Float!
}
type Dip {
  name: String!
  price: Float!
}
type Sauce {
  name: String!
  price: Float!
}
type Extra {
  name: String!
  price: Float!
}
type Food {
  _id: ID!
  name: String!
  price: Float!
  description: String!
  image: String!
  discount: Float!
  category: String!
  foodType: String!
  status: String!
  toppings: [Topping!]
  dips: [Dip!]
  sauces: [Sauce!]
  extras: [Extra!]
  numberOfFreeToppings: Int!
  numberOfFreeDips: Int!
  numberOfFreeSauces: Int!
  numberOfFreeExtras: Int!
}
type Query  {
  getFoods: [Food!]
  @rest(
    endpoint: "https://walk--in.herokuapp.com/food/"
  )
  getFood(id: ID!): Food
  @rest(
    endpoint: "https://walk--in.herokuapp.com/food/{id}"
  )
}
type Mutation  {
  createFood(
    name: String!
    price: Float!
    description: String!
    image: String!
    discount: Float!
    category: String!
    foodType: String!
    status: String!
    numberOfFreeToppings: Int!
    numberOfFreeDips: Int!
    numberOfFreeSauces: Int!
    numberOfFreeExtras: Int!
  ): Food
  @rest(
    method: POST
    endpoint: "https://walk--in.herokuapp.com/food/{id}"
  )
  updateFood(
    id: ID!
    name: String!
    price: Float!
    description: String!
    image: String!
    discount: Float!
    category: String!
    foodType: String!
    status: String!
    numberOfFreeToppings: Int!
    numberOfFreeDips: Int!
    numberOfFreeSauces: Int!
    numberOfFreeExtras: Int!
  ): Food
  @rest(
    method: PUT
    endpoint: "https://walk--in.herokuapp.com/food/{id}"
  )
  deleteFood(id: ID!): Food
  @rest(
    method: DELETE
    endpoint: "https://walk--in.herokuapp.com/food/{id}"
  )
}