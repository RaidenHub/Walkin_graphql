type Cart {
  _id: String
  price: Int
  quantity: Int
  userId: String
  shopId: String
  productId: String
  toppings: [Toppings]
  dips: [Dips]
  extras: [Extras]
  sauces: [Sauces]
}
type Sauces {
  name: String
  price: Int
  quantity: Int
}

type Extras {
  name: String
  price: Int
  quantity: Int
}

type Dips {
  name: String
  price: Int
  quantity: Int
}

type Toppings {
  name: String
  price: Int
  quantity: Int
}
input SaucesInput {
  name: String
  price: Int
  quantity: Int
}
input ExtrasInput {
  name: String
  price: Int
  quantity: Int
}
input DipsInput {
  name: String
  price: Int
  quantity: Int
}
input ToppingsInput {
  name: String
  price: Int
  quantity: Int
}

type Query {
  getCart(token: String!): [Cart!]
    @rest(
      endpoint: "https://walk--in.herokuapp.com/cart/"
      method: GET
      headers: [{ name: "Authorization", value: "Bearer $token" }]
    )
  getCartById(id: String!, token: String): Cart
    @rest(
      endpoint: "https://walk--in.herokuapp.com/cart/$id"
      method: GET
      headers: [{ name: "Authorization", value: "Bearer $token" }]
    )
}

type Mutation {
  addToCart(
    _id: String
    price: Int
    quantity: Int
    userId: String
    shopId: String
    productId: String
    toppings: [ToppingsInput]
    dips: [DipsInput]
    extras: [ExtrasInput]
    sauces: [SaucesInput]
    token: String!
  ): Cart
    @rest(
      endpoint: "https://walk--in.herokuapp.com/cart/"
      method: POST
      headers: [{ name: "Authorization", value: "Bearer $token" }]
    )
  updateCart(
    _id: String!
    price: Int
    quantity: Int
    userId: String
    foodId: String
    sauces: [SaucesInput]
    extras: [ExtrasInput]
    dips: [DipsInput]
    toppings: [ToppingsInput]
    token: String!
  ): Cart
    @rest(
      endpoint: "https://walk--in.herokuapp.com/cart/$id"
      method: PUT
      headers: [{ name: "Authorization", value: "Bearer $token" }]
    )
  removeFromCart(id: ID!, token: String!): Cart
    @rest(
      endpoint: "https://walk--in.herokuapp.com/cart/$id"
      method: DELETE
      headers: [{ name: "Authorization", value: "Bearer $token" }]
    )
}
